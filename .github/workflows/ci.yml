name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            name: Windows
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: |
            7.0.x
            6.0.x
      - name: Setup .NET Core 3.1 runtime
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 3.1.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Install SQL Server
        uses: Particular/install-sql-server-action@v1.0.2
        with:
          connection-string-env-var: SqlServerTransportConnectionString
          catalog: nservicebus
      - name: Prepare SQL Server
        shell: pwsh       
        run: |
          echo "Create extra databases"
          sqlcmd -Q "CREATE DATABASE nservicebus1"
          sqlcmd -Q "CREATE DATABASE nservicebus2"
          
          echo "Create additional schemas"
          sqlcmd -Q "CREATE SCHEMA receiver AUTHORIZATION db_owner" -d "nservicebus"
          sqlcmd -Q "CREATE SCHEMA sender AUTHORIZATION db_owner" -d "nservicebus"
          sqlcmd -Q "CREATE SCHEMA db@ AUTHORIZATION db_owner" -d "nservicebus"
      - name: Run tests
        uses: Particular/run-tests-action@v1.5.1
